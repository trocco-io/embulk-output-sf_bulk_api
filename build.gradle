plugins {
    id "java"
    id "org.embulk.embulk-plugins" version "0.5.5"
    id "com.diffplug.spotless" version "5.15.0"
    id "com.palantir.git-version" version "0.13.0"
    id "com.adarshr.test-logger" version "3.0.0"
}

repositories {
    mavenCentral()
}

group = "io.trocco"
description = "Stores files on Sf Bulk Api."

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = {
    def vd = versionDetails()
    if (vd.commitDistance == 0 && vd.lastTag ==~ /^v[0-9]+\.[0-9]+\.[0-9]+(\.[a-zA-Z0-9]+)?/) {
        vd.lastTag.substring(1)
    } else {
        "0.0.0.${vd.gitHash}"
    }
}()


dependencies {
    def embulkVersion = "0.10.42"
    compileOnly("org.embulk:embulk-api:${embulkVersion}")
    compileOnly("org.embulk:embulk-spi:${embulkVersion}")

    compile "org.embulk:embulk-util-config:0.3.4"

    // https://mvnrepository.com/artifact/com.force.api/force-wsc
    compile group: 'com.force.api', name: 'force-wsc', version: '47.0.0'
    // https://mvnrepository.com/artifact/com.force.api/force-partner-api
    compile group: 'com.force.api', name: 'force-partner-api', version: '47.0.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    testImplementation("org.embulk:embulk-api:${embulkVersion}")
    testImplementation("org.embulk:embulk-spi:${embulkVersion}")
    testImplementation "junit:junit:4.+"
    testImplementation "org.mockito:mockito-inline:4.11.0"
}

embulkPlugin {
    mainClass = "org.embulk.output.sf_bulk_api.SfBulkApiOutputPlugin"
    category = "output"
    type = "sf_bulk_api"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

gem {
    from("LICENSE.txt")
    authors = ["dododo8m"]
    email = ["taichiddt+8m@gmail.com"]
    summary = "Sf Bulk Api file output plugin for Embulk"
    homepage = "https://github.com/trocco-io/embulk-output-sf_bulk_api"
    licenses = [ "MIT" ]
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
    }
}
